// Media Queries
@mixin respond-to($breakpoint) {
  @if map-has-key($container-max-widths, $breakpoint) {
    @media (min-width: map-get($container-max-widths, $breakpoint)) {
      @content;
    }
  }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid
@mixin make-container {
  width: 100%;
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
  margin-right: auto;
  margin-left: auto;

  @each $breakpoint, $container-max-width in $container-max-widths {
    @include respond-to($breakpoint) {
      max-width: $container-max-width;
    }
  }
}

// Typography
@mixin font-size($size) {
  font-size: $size;
  line-height: $line-height-base;
}

@mixin heading($size) {
  font-family: $font-family-heading;
  font-weight: bold;
  line-height: $line-height-heading;
  @include font-size($size);
}

// Buttons
@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-contrast($background);
  background-color: $background;
  border-color: $border;

  &:hover {
    color: color-contrast($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
  }

  &:active {
    color: color-contrast($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }
}

// Transitions
@mixin transition($property: all) {
  transition: $property $transition-base;
}

// Shadows
@mixin box-shadow($shadow: $shadow-sm) {
  box-shadow: $shadow;
}

// Gradients
@mixin gradient($start-color: $primary-color, $end-color: $secondary-color, $direction: 45deg) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// Text truncation
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Responsive images
@mixin img-fluid {
  max-width: 100%;
  height: auto;
}

// Clearfix
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

// Hover focus
@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

// Screen readers
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
} 